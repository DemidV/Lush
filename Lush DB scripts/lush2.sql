-- MySQL Script generated by MySQL Workbench
-- Thu Oct 15 14:13:22 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lush
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lush
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lush` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci ;
USE `lush` ;

-- -----------------------------------------------------
-- Table `lush`.`image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`image` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `image` MEDIUMBLOB NOT NULL,
  `deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `images__id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`audio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`audio` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `audio` LONGBLOB NOT NULL,
  `title` VARCHAR(255) NULL,
  `deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `audio__id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`artist` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `description` VARCHAR(10240) NULL,
  `deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `artist__id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`post` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `post__id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`post_audio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`post_audio` (
  `post_id` INT UNSIGNED NOT NULL,
  `audio_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`post_id`, `audio_id`),
  CONSTRAINT `post_audio__post__id`
    FOREIGN KEY (`post_id`)
    REFERENCES `lush`.`post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `post_audio__audio__id`
    FOREIGN KEY (`audio_id`)
    REFERENCES `lush`.`audio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`tag` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `deleted` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `tag__id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `tag__name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`post_image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`post_image` (
  `post_id` INT UNSIGNED NOT NULL,
  `image_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`post_id`, `image_id`),
  INDEX `post_image__image__id_idx` (`image_id` ASC) VISIBLE,
  CONSTRAINT `post_image__post__id`
    FOREIGN KEY (`post_id`)
    REFERENCES `lush`.`post` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `post_image__image__id`
    FOREIGN KEY (`image_id`)
    REFERENCES `lush`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`post_tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`post_tag` (
  `audio_id` INT UNSIGNED NOT NULL,
  `tag_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`audio_id`, `tag_id`),
  INDEX `post_tag__tag__id_idx` (`tag_id` ASC) VISIBLE,
  CONSTRAINT `post_tag__audio__id`
    FOREIGN KEY (`audio_id`)
    REFERENCES `lush`.`audio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `post_tag__tag__id`
    FOREIGN KEY (`tag_id`)
    REFERENCES `lush`.`tag` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`audio_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`audio_artist` (
  `audio_id` INT UNSIGNED NOT NULL,
  `artist_id` INT UNSIGNED NOT NULL,
  `artist_position` INT UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (`audio_id`, `artist_id`),
  CONSTRAINT `audio_artist__artist__id`
    FOREIGN KEY (`artist_id`)
    REFERENCES `lush`.`artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `audio_artist__audio__id`
    FOREIGN KEY (`audio_id`)
    REFERENCES `lush`.`audio` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`image_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`image_artist` (
  `image_id` INT UNSIGNED NOT NULL,
  `artist_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`image_id`, `artist_id`),
  INDEX `image_artist__artist__id_idx` (`artist_id` ASC) VISIBLE,
  CONSTRAINT `image_artist__image__id`
    FOREIGN KEY (`image_id`)
    REFERENCES `lush`.`image` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `image_artist__artist__id`
    FOREIGN KEY (`artist_id`)
    REFERENCES `lush`.`artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`artists_in_filename`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`artists_in_filename` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `artists` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `artist_in_filename__name_UNIQUE` (`artists` ASC) VISIBLE,
  UNIQUE INDEX `artist_in_filename__id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`artist_in_filename_artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`artist_in_filename_artist` (
  `artists_in_filename_id` INT UNSIGNED NOT NULL,
  `artist_id` INT UNSIGNED NOT NULL,
  `artist_position` INT UNSIGNED NOT NULL DEFAULT 1,
  PRIMARY KEY (`artists_in_filename_id`, `artist_id`),
  CONSTRAINT `artist_artist_in_filename__artist__id`
    FOREIGN KEY (`artist_id`)
    REFERENCES `lush`.`artist` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `artist_in_filename_artist__artist_in_filename__id`
    FOREIGN KEY (`artists_in_filename_id`)
    REFERENCES `lush`.`artists_in_filename` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lush`.`filename`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lush`.`filename` (
  `filename` VARCHAR(255) NOT NULL,
  `renamed_title` VARCHAR(255) NOT NULL,
  `artist_in_filename_id` INT UNSIGNED NOT NULL,
  UNIQUE INDEX `audio_filename__name_UNIQUE` (`filename` ASC) VISIBLE,
  PRIMARY KEY (`filename`),
  INDEX `audio_filename__artist_in_filename_idx` (`artist_in_filename_id` ASC) VISIBLE,
  CONSTRAINT `audio_filename__artist_in_filename`
    FOREIGN KEY (`artist_in_filename_id`)
    REFERENCES `lush`.`artists_in_filename` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
